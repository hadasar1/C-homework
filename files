1.
#include <stdio.h>

int main()
{
     FILE *fp = fopen("example.txt", "r");

    if (fp == NULL) {
        printf("Failed to open file.\n");
        return 1;
    }

    char c;
    while ((c = fgetc(fp)) != EOF) {
        putchar(c);
    }
    
    fclose(fp);

    return 0;
}
2.
#include <stdio.h>

int main() {
    FILE *src = fopen("/path/to/your/source_file.txt", "r");

    if (src == NULL) {
        printf("Failed to open source file.\n");
        return 1;
    }

    FILE *dst = fopen("/path/to/your/destination_file.txt", "w");

    if (dst == NULL) {
        printf("Failed to open destination file.\n");
        fclose(src);
        return 1;
    }

    char c;
    while ((c = fgetc(src)) != EOF) {
        fputc(c, dst);
    }

    fclose(src);
    fclose(dst);

    printf("File copied successfully.\n");

    return 0;
}

3.
#include <stdio.h>
#include <stdlib.h>

int main() {
    FILE *fptr1, *fptr2;
    char filename[100], c;
    int num_chars = 0;
    int line_len = 0;

    printf("Enter the filename to open for reading: ");
    scanf("%s", filename);
    fptr1 = fopen(filename, "r");
    if (fptr1 == NULL) {
        printf("Cannot open file %s \n", filename);
        exit(0);
    }

    fptr2 = fopen("output.txt", "w");
    if (fptr2 == NULL) {
        printf("Cannot create file \n");
        exit(0);
    }

    c = fgetc(fptr1);
    while (c != EOF) {
        num_chars++;
        if (c == '\n') { 
            if (line_len > 5) {
                fputc('\n', fptr2);  
            }
            line_len = 0; 
        } else {
            fputc(c, fptr2);
            line_len++;
        }
        c = fgetc(fptr1);
    }

    fclose(fptr1);
    fclose(fptr2);

    printf("Successfully copied lines with more than 5 characters to output.txt\n");
    return 0;
}
4.
#include <stdio.h>
#include <string.h>

int compareFiles(const char *file1, const char *file2) {
    FILE *fp1, *fp2;
    int ch1, ch2;

    fp1 = fopen(file1, "r");
    if (fp1 == NULL) {
        return -1;
    }

    fp2 = fopen(file2, "r");
    if (fp2 == NULL) {
        fclose(fp1);
        return -1;
    }

    while (((ch1 = fgetc(fp1)) != EOF) && ((ch2 = fgetc(fp2)) != EOF)) {
        if (ch1 != ch2) {
            fclose(fp1);
            fclose(fp2);
            return 0;
        }
    }

    if (ch1 == EOF && ch2 == EOF) {
        fclose(fp1);
        fclose(fp2);
        return 1;
    } else {
        fclose(fp1);
        fclose(fp2);
        return 0;
    }
}
